{"ast":null,"code":"import axios from 'axios';\nexport const CHECK_LOGIN = 'CHECK_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport function checkLogin() {\n  if (localStorage.getItem('token')) {\n    return {\n      type: CHECK_LOGIN\n    };\n  } else {\n    return {\n      type: LOGIN_FAILURE\n    };\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: LOGIN_SUCCESS\n  };\n}\n\nfunction loginFailure() {\n  return {\n    type: LOGIN_FAILURE\n  };\n}\n\nfunction logOutAction() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function loginUser(email, password) {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_SERVER}/api/login`, {\n      email: email,\n      password: password\n    }).then(response => {\n      console.log(response);\n\n      if (response.data == null) {\n        dispatch(loginFailure());\n      } else if (!response.data.token) {\n        dispatch(loginFailure());\n      } else {\n        localStorage.setItem('token', response.data.token);\n        dispatch(loginSuccess());\n      }\n    });\n  };\n}\nexport function loginFacebook(userInfo) {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_SERVER}/api/login/facebook`, {\n      userInfo: userInfo,\n      access_token: userInfo.accessToken\n    }).then(response => {\n      if (response.data == null) {\n        dispatch(loginFailure('UnKnown Error'));\n      } else if (!response.data.token) {\n        dispatch(loginFailure(response.data.message || \"Token not generated!\"));\n      } else {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userPicture', userInfo.picture.data.url);\n        dispatch(loginSuccess());\n      }\n    });\n  };\n}\nexport function logOut() {\n  return dispatch => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userPicture');\n    dispatch(logOutAction());\n  };\n}\n\nfunction signUpFailure() {\n  return {\n    type: SIGNUP_FAILURE\n  };\n}\n\nexport function signUpUser(email, password) {\n  return dispatch => {\n    return axios.post(`http://localhost:8080/api/signup`, {\n      email: email,\n      password: password\n    }).then(response => {\n      console.log('signup' + response);\n\n      if (!response.data) {\n        dispatch(signUpFailure());\n      } else {\n        localStorage.setItem('token', response.data.token);\n        dispatch(loginSuccess());\n      }\n    }).catch(err => {\n      dispatch(signUpFailure());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/redux/auth/actions.js"],"names":["axios","CHECK_LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SIGNUP_FAILURE","checkLogin","localStorage","getItem","type","loginSuccess","loginFailure","logOutAction","loginUser","email","password","dispatch","post","process","env","REACT_APP_API_SERVER","then","response","console","log","data","token","setItem","loginFacebook","userInfo","access_token","accessToken","message","picture","url","logOut","removeItem","signUpFailure","signUpUser","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\nexport const CHECK_LOGIN = 'CHECK_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\n\nexport function checkLogin() {\n    if (localStorage.getItem('token')) {\n        return {\n            type: CHECK_LOGIN\n        };\n    } else {\n       return {\n           type: LOGIN_FAILURE\n        }\n    }\n}\n\nfunction loginSuccess() {\n    return {\n        type: LOGIN_SUCCESS\n    };\n}\n\nfunction loginFailure() {\n    return {\n        type: LOGIN_FAILURE,\n    }\n}\n\n function logOutAction() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function loginUser(email, password) {\n    return (dispatch) => {\n        return axios.post(`${process.env.REACT_APP_API_SERVER}/api/login`,\n            {\n                email: email,\n                password: password\n            }\n        )\n        .then(response => {\n            console.log(response)\n            if(response.data == null){\n                dispatch(loginFailure());\n            } else if (!response.data.token){\n                dispatch(loginFailure());\n            } else {\n                localStorage.setItem('token', response.data.token);\n                dispatch(loginSuccess());\n            }\n        });\n    };\n}\n\nexport function loginFacebook(userInfo){\n    return(dispatch) => {\n        return axios.post(`${process.env.REACT_APP_API_SERVER}/api/login/facebook`,\n        {   \n            userInfo: userInfo,\n            access_token: userInfo.accessToken\n        })\n        .then(response => {\n            if(response.data == null){\n                dispatch(loginFailure('UnKnown Error'));\n            } else if (!response.data.token){\n                dispatch(loginFailure(response.data.message || \"Token not generated!\"));\n            } else {\n                localStorage.setItem('token', response.data.token);\n                localStorage.setItem('userPicture', userInfo.picture.data.url)\n                dispatch(loginSuccess())\n            }\n        });\n    };\n}\n\n\n\nexport function logOut(){\n    return (dispatch)=> {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userPicture');\n        dispatch(logOutAction());\n    };\n}\n\n\nfunction signUpFailure() {\n    return {\n        type: SIGNUP_FAILURE,\n    }\n}\n\nexport function signUpUser(email, password) {\n    return (dispatch) => {\n        return axios.post(`http://localhost:8080/api/signup`,\n            {\n                email: email,\n                password: password\n            }\n        )\n        .then(response => {\n            console.log('signup' + response);\n            if(!response.data){\n                dispatch(signUpFailure());\n            } else {\n                localStorage.setItem('token', response.data.token);\n                dispatch(loginSuccess());\n            }\n        })\n        .catch(err => {\n            dispatch(signUpFailure());\n        })\n    };\n}"]},"metadata":{},"sourceType":"module"}