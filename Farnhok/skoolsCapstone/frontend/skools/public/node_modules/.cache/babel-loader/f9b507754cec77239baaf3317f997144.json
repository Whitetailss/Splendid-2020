{"ast":null,"code":"var _jsxFileName = \"/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/component/schoolCms/singleUploader.jsx\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { storage } from '../../firebase';\nimport { Input, Button, Progress } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { uploadMedia } from '../../redux/cmsDetails/action';\nimport './../../../src/assets/css/cms/cmsDetails.css';\n\nclass PureUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = e => {\n      let file = e.target.files[0];\n      console.log(file);\n      this.setState({\n        image: file\n      });\n    };\n\n    this.handleUpload = async e => {\n      const {\n        image\n      } = this.state;\n      let uploaderName = e.target.name;\n      let caption = this.state.caption;\n      console.log(e.target.name, this.state.caption);\n\n      if ((uploaderName === 'teacher' || uploaderName === 'facility') && caption === null) {\n        this.setState({\n          errMsg: 'Do not leave caption/description blank'\n        });\n      } else {\n        let uploadTask = storage.ref(`image/${image.name}`).put(image);\n        uploadTask.on('state_changed', snapshot => {\n          console.log('snapshot');\n          const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          this.setState({\n            progress\n          });\n        } //progress function .....\n        , error => {\n          //error function\n          console.log(error);\n        }, () => {\n          storage.ref('image').child(image.name).getDownloadURL().then(async url => {\n            if (uploaderName === 'teacher') {\n              console.log('uploading teacher');\n              let photoOptions = {\n                method: 'POST',\n                url: `http://localhost:8080/school/`,\n                data: {\n                  url: url,\n                  caption: caption,\n                  photo_category: 'teacher'\n                },\n                headers: {\n                  'Authorization': 'Bearer ' + localStorage.getItem('cmsToken')\n                }\n              };\n              let teacherPhoto = await axios(photoOptions);\n            } else if (uploaderName === 'facility') {\n              console.log('uploading facility');\n              let photoOptions = {\n                method: 'POST',\n                url: `http://localhost:8080/school/`,\n                data: {\n                  url: url,\n                  caption: caption,\n                  photo_category: 'facility'\n                },\n                headers: {\n                  'Authorization': 'Bearer ' + localStorage.getItem('cmsToken')\n                }\n              };\n              let facilityPhoto = await axios(photoOptions);\n            }\n\n            this.props.uploadMedia(url, caption, uploaderName);\n          }); // define image name\n        });\n      }\n\n      ;\n    };\n\n    this.clearInput = e => {\n      e.preventDefault();\n      this.setState({\n        image: '',\n        caption: '',\n        progress: 0\n      });\n    };\n\n    this.state = {\n      image: '',\n      progress: 0,\n      caption: null,\n      errMsg: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, this.props.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"captionInput\",\n      className: this.props.hasCaption,\n      type: \"textarea\",\n      name: \"caption\",\n      placeholder: \"Caption/Description\",\n      value: this.state.caption,\n      onChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      name: this.props.uploaderName,\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      bar: true,\n      value: this.state.progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \" LOADING \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, this.state.errMsg), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: this.props.hasClear,\n      color: \"primary\",\n      onClick: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Add Another\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadMedia: (url, caption, uploaderName) => {\n      dispatch(uploadMedia(url, caption, uploaderName));\n    }\n  };\n};\n\nexport const Uploader = connect(null, mapDispatchToProps)(PureUploader);","map":{"version":3,"sources":["/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/component/schoolCms/singleUploader.jsx"],"names":["axios","React","Component","storage","Input","Button","Progress","connect","uploadMedia","PureUploader","constructor","props","handleInput","e","setState","target","name","value","handleChange","file","files","console","log","image","handleUpload","state","uploaderName","caption","errMsg","uploadTask","ref","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","photoOptions","method","data","photo_category","headers","localStorage","getItem","teacherPhoto","facilityPhoto","clearInput","preventDefault","bind","render","style","text","hasCaption","hasClear","mapDispatchToProps","dispatch","Uploader"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { storage } from '../../firebase';\r\nimport {Input, Button, Progress} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport {uploadMedia} from '../../redux/cmsDetails/action'\r\nimport './../../../src/assets/css/cms/cmsDetails.css';\r\n\r\nclass PureUploader extends Component {\r\n   constructor(props) {\r\n       super(props);\r\n       this.state = {\r\n           image: '',\r\n           progress: 0,\r\n           caption: null,\r\n           errMsg: ''\r\n       }\r\n\r\n       this.handleChange = this.handleChange.bind(this);\r\n       this.handleUpload = this.handleUpload.bind(this);\r\n       this.handleInput = this.handleInput.bind(this);\r\n       this.clearInput = this.clearInput.bind(this)\r\n   }\r\n\r\n\r\n   handleInput = e => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value,\r\n    })\r\n}\r\n\r\n\r\n   handleChange = e => {\r\n       let file = e.target.files[0];\r\n       console.log(file)\r\n           this.setState(\r\n               {image:file});\r\n\r\n       }\r\n   \r\n\r\n    handleUpload = async (e) => {\r\n        const { image } = this.state;\r\n        let uploaderName = e.target.name;\r\n        let caption = this.state.caption;\r\n  console.log( e.target.name, this.state.caption)\r\n\r\n        if((uploaderName === 'teacher' || uploaderName === 'facility') && caption === null){\r\n            this.setState({errMsg:'Do not leave caption/description blank'})\r\n        } else {\r\n\r\n            let uploadTask = storage.ref(`image/${image.name}`).put(image);\r\n\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    console.log('snapshot')\r\n                    const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                    this.setState({ progress })\r\n                } //progress function .....\r\n                , (error) => { //error function\r\n                    console.log(error);\r\n                }, () => {\r\n                    storage.ref('image').child(image.name).getDownloadURL().then(\r\n                        async (url) => {\r\n                        \r\n                        if(uploaderName==='teacher'){\r\n                            console.log('uploading teacher')\r\n                            let photoOptions = {\r\n                                method: 'POST',\r\n                                url: `http://localhost:8080/school/`,\r\n                                data: {url: url, caption:caption, photo_category:'teacher'},\r\n                                headers: {\r\n                                    'Authorization': 'Bearer ' + localStorage.getItem('cmsToken')\r\n                                    }\r\n                                }\r\n                           let teacherPhoto = await axios(photoOptions) \r\n                        }\r\n                            \r\n                        \r\n                        else if(uploaderName === 'facility'){\r\n\r\n                            console.log('uploading facility')\r\n                            let photoOptions = {\r\n                                method: 'POST',\r\n                                url: `http://localhost:8080/school/`,\r\n                                data: {url: url, caption:caption, photo_category:'facility'},\r\n                                headers: {\r\n                                    'Authorization': 'Bearer ' + localStorage.getItem('cmsToken')\r\n                                }\r\n                            }\r\n                            let facilityPhoto = await axios(photoOptions)\r\n\r\n                        }    \r\n\r\n                        this.props.uploadMedia(url, caption, uploaderName)\r\n                        }\r\n\r\n                        )  // define image name\r\n                    })\r\n                \r\n            \r\n            };\r\n        }\r\n    \r\n    clearInput = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            image:'',\r\n            caption: '',\r\n            progress:0\r\n        })\r\n    }\r\n\r\n\r\n   render() {\r\n\r\n        return (\r\n            <div style={this.props.style}>\r\n                <h1>{this.props.text}</h1>\r\n                <div className='uploadBar'>\r\n                    <div>\r\n                        <Input type='file' onChange={e => this.handleChange(e)} />\r\n                    </div>\r\n                    <div >\r\n                        <Input id='captionInput'\r\n                        className={this.props.hasCaption}\r\n                        type='textarea' \r\n                        name='caption' \r\n                        placeholder='Caption/Description' \r\n                        value={this.state.caption} \r\n                        onChange={this.handleInput}/>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <Button name={this.props.uploaderName} onClick={this.handleUpload}>Upload</Button>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                <div className='progressBar'>\r\n                    <div>\r\n                        <Progress bar value={this.state.progress} max='100'> LOADING </Progress>\r\n                        <br/>\r\n                    </div>\r\n                    <div>{this.state.errMsg}</div>\r\n                    <div>\r\n                        <Button className={this.props.hasClear} color='primary' onClick={this.clearInput}>Add Another</Button>\r\n                    </div>\r\n                </div>\r\n                    \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        uploadMedia: (url, caption, uploaderName) => {\r\n            dispatch(uploadMedia(url, caption, uploaderName))\r\n     }\r\n}\r\n}\r\nexport const Uploader = connect(null, mapDispatchToProps)(PureUploader);\r\n"]},"metadata":{},"sourceType":"module"}