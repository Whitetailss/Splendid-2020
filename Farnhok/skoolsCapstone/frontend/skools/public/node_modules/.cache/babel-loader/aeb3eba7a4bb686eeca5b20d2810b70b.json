{"ast":null,"code":"import _classCallCheck from\"/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{withRouter,NavLink}from'react-router-dom';import{connect}from'react-redux';import'../../assets/css/compare/compareBar.css';import{clearCompare as _clearCompare,clearOneCompare as _clearOneCompare}from'../../redux/search/actions';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTimes}from'@fortawesome/free-solid-svg-icons';var PureCompareBar=/*#__PURE__*/function(_React$Component){_inherits(PureCompareBar,_React$Component);var _super=_createSuper(PureCompareBar);function PureCompareBar(){var _this;_classCallCheck(this,PureCompareBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.clearAll=function(){_this.props.clearCompare();};_this.clearFirstCompare=function(){if(_this.props.compare.length===1){_this.props.clearCompare();}else{_this.props.clearOneCompare([_this.props.compare[1]]);}};_this.clearSecondCompare=function(){_this.props.clearOneCompare([_this.props.compare[0]]);};return _this;}_createClass(PureCompareBar,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,!this.props.compareButtonStatus?\"\":/*#__PURE__*/React.createElement(\"div\",{id:\"compareBarContainer\"},/*#__PURE__*/React.createElement(\"div\",{id:\"compareBarBoxContainer\"},this.props.compare[0]?/*#__PURE__*/React.createElement(\"button\",{className:\"compareBarBox compareBarBoxResult\",value:\"0\",onClick:this.clearFirstCompare},/*#__PURE__*/React.createElement(\"p\",{className:\"compareBarWord\"},this.props.compare[0].school_name),/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"compareBarDeleteButton\",size:\"md\",icon:faTimes})):\"Error\",this.props.compare[1]?/*#__PURE__*/React.createElement(\"button\",{className:\"compareBarBox compareBarBoxResult\",onClick:this.clearSecondCompare},/*#__PURE__*/React.createElement(\"p\",{className:\"compareBarWord\"},this.props.compare[1].school_name),/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"compareBarDeleteButton\",size:\"md\",icon:faTimes})):/*#__PURE__*/React.createElement(\"div\",{className:\"compareBarBox\"},/*#__PURE__*/React.createElement(\"p\",{className:\"compareBarWordEmpty\"},\"Add School To Compare\"))),/*#__PURE__*/React.createElement(\"div\",{id:\"compareBarButtonBox\"},/*#__PURE__*/React.createElement(\"button\",{className:\"compareBarButtonBoxButton\",onClick:this.props.clearCompare},\"Clear All\"),this.props.compare.length===1?/*#__PURE__*/React.createElement(\"p\",null,\"Compare\"):/*#__PURE__*/React.createElement(NavLink,{className:\"compareBarButtonBoxButton\",to:\"/compare\"},\"Compare\"))));}}]);return PureCompareBar;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{compare:state.search.compare,compareButtonStatus:state.search.compareButtonStatus};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{clearCompare:function clearCompare(){dispatch(_clearCompare());},clearOneCompare:function clearOneCompare(newCompare){dispatch(_clearOneCompare(newCompare));}};};export var CompareBar=withRouter(connect(mapStateToProps,mapDispatchToProps)(PureCompareBar));","map":{"version":3,"sources":["/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/component/compare/compareBar.jsx"],"names":["React","withRouter","NavLink","connect","clearCompare","clearOneCompare","FontAwesomeIcon","faTimes","PureCompareBar","clearAll","props","clearFirstCompare","compare","length","clearSecondCompare","compareButtonStatus","school_name","Component","mapStateToProps","state","search","mapDispatchToProps","dispatch","newCompare","CompareBar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport '../../assets/css/compare/compareBar.css';\nimport { clearCompare, clearOneCompare} from '../../redux/search/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass PureCompareBar extends React.Component {\n\n    clearAll = () => {\n        this.props.clearCompare();\n    }\n\n    clearFirstCompare = () => {\n        if (this.props.compare.length === 1) {\n            this.props.clearCompare();\n        } else {\n            this.props.clearOneCompare([this.props.compare[1]]);\n        }\n    }\n\n    clearSecondCompare = () => {\n        this.props.clearOneCompare([this.props.compare[0]]);\n    }\n\n    render() {\n        return (\n            <div> \n                {!this.props.compareButtonStatus? (\"\") \n                : (\n                    <div id=\"compareBarContainer\">\n                        <div id='compareBarBoxContainer'>\n                            {this.props.compare[0]? (\n                                <button className='compareBarBox compareBarBoxResult' value='0' onClick={this.clearFirstCompare} >\n                                    <p className='compareBarWord'>{this.props.compare[0].school_name}</p>\n                                    <FontAwesomeIcon className=\"compareBarDeleteButton\" size=\"md\" icon={faTimes} />\n                                </button>\n                                ) : (\"Error\")\n                            }\n                            {this.props.compare[1]? (\n                                <button className='compareBarBox compareBarBoxResult'  onClick={this.clearSecondCompare} >\n\n                                    <p className='compareBarWord'>{this.props.compare[1].school_name}</p>\n                                    <FontAwesomeIcon  className=\"compareBarDeleteButton\" size=\"md\" icon={faTimes} />\n\n                                </button>\n                                ) : (\n                                <div className='compareBarBox'>\n                                    <p className='compareBarWordEmpty'>Add School To Compare</p>\n                                </div>\n                                )\n                            }\n                        </div>\n                        <div id='compareBarButtonBox'>\n                            <button className='compareBarButtonBoxButton' onClick={this.props.clearCompare}>Clear All</button>\n                            {this.props.compare.length === 1? (\n                                <p>Compare</p>\n                            ) : (\n                                <NavLink className='compareBarButtonBoxButton' to=\"/compare\">Compare</NavLink>                                    \n                            )}\n                        </div>\n                    </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        compare: state.search.compare,\n        compareButtonStatus: state.search.compareButtonStatus\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        clearCompare: () => {\n            dispatch(clearCompare());\n        },\n        clearOneCompare: (newCompare) => {\n            dispatch(clearOneCompare(newCompare));\n        },\n    }\n};\n\nexport const CompareBar = withRouter(connect(mapStateToProps, mapDispatchToProps)(PureCompareBar))"]},"metadata":{},"sourceType":"module"}