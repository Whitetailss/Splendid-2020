{"ast":null,"code":"import axios from'axios';export var CMS_CHECK_LOGIN='CMS_CHECK_LOGIN';export var CMS_LOGIN_SUCCESS='CMS_LOGIN_SUCCESS';export var CMS_LOGIN_FAILURE='CMS_LOGIN_FAILURE';export var CMS_LOGOUT='CMS_LOGOUT';export var CMS_SIGNUP_FAILURE='CMS_SIGNUP_FAILURE';export function checkCmsLogin(){if(localStorage.getItem('cmsToken')){return{type:CMS_CHECK_LOGIN};}else{return{type:CMS_LOGIN_FAILURE};}}function loginCmsSuccess(){return{type:CMS_LOGIN_SUCCESS};}function loginCmsFailure(){return{type:CMS_LOGIN_FAILURE};}function logOutActionCms(){return{type:CMS_LOGOUT};}export function loginCmsUser(email,password){return function(dispatch){return axios.post(\"\".concat(process.env.REACT_APP_API_SERVER,\"/api/cms/login/\"),{email:email,password:password}).then(function(response){console.log(response);if(response.data==null){dispatch(loginCmsFailure());}else if(!response.data.token){dispatch(loginCmsFailure());}else{localStorage.setItem('cmsToken',response.data.token);dispatch(loginCmsSuccess());}});};}export function logOutCms(){return function(dispatch){localStorage.removeItem('cmsToken');dispatch(logOutActionCms());};}function signUpCmsFailure(){return{type:CMS_SIGNUP_FAILURE};}export function signUpCmsUser(email,password){return function(dispatch){return axios.post(\"http://localhost:8080/api/cms/signup\",{email:email,password:password}).then(function(response){console.log('signup'+response);if(!response.data){dispatch(signUpCmsFailure());}else{localStorage.setItem('cmsToken',response.data.token);dispatch(loginCmsSuccess());}}).catch(function(err){dispatch(signUpCmsFailure());});};}","map":{"version":3,"sources":["/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/redux/cmsAuth/actions.js"],"names":["axios","CMS_CHECK_LOGIN","CMS_LOGIN_SUCCESS","CMS_LOGIN_FAILURE","CMS_LOGOUT","CMS_SIGNUP_FAILURE","checkCmsLogin","localStorage","getItem","type","loginCmsSuccess","loginCmsFailure","logOutActionCms","loginCmsUser","email","password","dispatch","post","process","env","REACT_APP_API_SERVER","then","response","console","log","data","token","setItem","logOutCms","removeItem","signUpCmsFailure","signUpCmsUser","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nexport const CMS_CHECK_LOGIN = 'CMS_CHECK_LOGIN';\r\nexport const CMS_LOGIN_SUCCESS = 'CMS_LOGIN_SUCCESS';\r\nexport const CMS_LOGIN_FAILURE = 'CMS_LOGIN_FAILURE';\r\nexport const CMS_LOGOUT = 'CMS_LOGOUT';\r\nexport const CMS_SIGNUP_FAILURE = 'CMS_SIGNUP_FAILURE';\r\n\r\nexport function checkCmsLogin() {\r\n    if (localStorage.getItem('cmsToken')) {\r\n        return {\r\n            type: CMS_CHECK_LOGIN\r\n        };\r\n    } else {\r\n       return {\r\n           type: CMS_LOGIN_FAILURE\r\n        }\r\n    }\r\n}\r\n\r\nfunction loginCmsSuccess() {\r\n    return {\r\n        type: CMS_LOGIN_SUCCESS\r\n    };\r\n}\r\n\r\nfunction loginCmsFailure() {\r\n    return {\r\n        type: CMS_LOGIN_FAILURE,\r\n    }\r\n}\r\n\r\n function logOutActionCms() {\r\n    return {\r\n        type: CMS_LOGOUT\r\n    }\r\n}\r\n\r\nexport function loginCmsUser(email, password) {\r\n    return (dispatch) => {\r\n        return axios.post(`${process.env.REACT_APP_API_SERVER}/api/cms/login/`,\r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        )\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.data == null){\r\n                dispatch(loginCmsFailure());\r\n            } else if (!response.data.token){\r\n                dispatch(loginCmsFailure());\r\n            } else {\r\n                localStorage.setItem('cmsToken', response.data.token);\r\n                dispatch(loginCmsSuccess());\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function logOutCms(){\r\n    return (dispatch)=> {\r\n        localStorage.removeItem('cmsToken');\r\n        dispatch(logOutActionCms());\r\n    };\r\n}\r\n\r\n\r\nfunction signUpCmsFailure() {\r\n    return {\r\n        type: CMS_SIGNUP_FAILURE,\r\n    }\r\n}\r\n\r\nexport function signUpCmsUser(email, password) {\r\n    return (dispatch) => {\r\n        return axios.post(`http://localhost:8080/api/cms/signup`,\r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        )\r\n        .then(response => {\r\n            console.log('signup' + response);\r\n            if(!response.data){\r\n                dispatch(signUpCmsFailure());\r\n            } else {\r\n                localStorage.setItem('cmsToken', response.data.token);\r\n                dispatch(loginCmsSuccess());\r\n            }\r\n        })\r\n        .catch(err => {\r\n            dispatch(signUpCmsFailure());\r\n        })\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}