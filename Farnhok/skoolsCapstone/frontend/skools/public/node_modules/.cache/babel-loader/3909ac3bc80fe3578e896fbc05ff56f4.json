{"ast":null,"code":"var _jsxFileName = \"/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/component/compare/compareBar.jsx\";\nimport React from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../../assets/css/compare/compareBar.css';\nimport { clearCompare, clearOneCompare } from '../../redux/search/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass PureCompareBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clearAll = () => {\n      this.props.clearCompare();\n    };\n\n    this.clearFirstCompare = () => {\n      if (this.props.compare.length === 1) {\n        this.props.clearCompare();\n      } else {\n        this.props.clearOneCompare([this.props.compare[1]]);\n      }\n    };\n\n    this.clearSecondCompare = () => {\n      this.props.clearOneCompare([this.props.compare[0]]);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, !this.props.compareButtonStatus ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"compareBarContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"compareBarBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, this.props.compare[0] ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"compareBarBox compareBarBoxResult\",\n      value: \"0\",\n      onClick: this.clearFirstCompare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"compareBarWord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, this.props.compare[0].school_name), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"compareBarDeleteButton\",\n      size: \"md\",\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    })) : \"Error\", this.props.compare[1] ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"compareBarBox compareBarBoxResult\",\n      onClick: this.clearSecondCompare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"compareBarWord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, this.props.compare[1].school_name), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"compareBarDeleteButton\",\n      size: \"md\",\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compareBarBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"compareBarWordEmpty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, \"Add School To Compare\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"compareBarButtonBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"compareBarButtonBoxButton\",\n      onClick: this.props.clearCompare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Clear All\"), this.props.compare.length === 1 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, \"Compare\") : /*#__PURE__*/React.createElement(NavLink, {\n      className: \"compareBarButtonBoxButton\",\n      to: \"/compare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, \"Compare\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    compare: state.search.compare,\n    compareButtonStatus: state.search.compareButtonStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearCompare: () => {\n      dispatch(clearCompare());\n    },\n    clearOneCompare: newCompare => {\n      dispatch(clearOneCompare(newCompare));\n    }\n  };\n};\n\nexport const CompareBar = withRouter(connect(mapStateToProps, mapDispatchToProps)(PureCompareBar));","map":{"version":3,"sources":["/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/component/compare/compareBar.jsx"],"names":["React","withRouter","NavLink","connect","clearCompare","clearOneCompare","FontAwesomeIcon","faTimes","PureCompareBar","Component","clearAll","props","clearFirstCompare","compare","length","clearSecondCompare","render","compareButtonStatus","school_name","mapStateToProps","state","search","mapDispatchToProps","dispatch","newCompare","CompareBar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport '../../assets/css/compare/compareBar.css';\nimport { clearCompare, clearOneCompare} from '../../redux/search/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass PureCompareBar extends React.Component {\n\n    clearAll = () => {\n        this.props.clearCompare();\n    }\n\n    clearFirstCompare = () => {\n        if (this.props.compare.length === 1) {\n            this.props.clearCompare();\n        } else {\n            this.props.clearOneCompare([this.props.compare[1]]);\n        }\n    }\n\n    clearSecondCompare = () => {\n        this.props.clearOneCompare([this.props.compare[0]]);\n    }\n\n    render() {\n        return (\n            <div> \n                {!this.props.compareButtonStatus? (\"\") \n                : (\n                    <div id=\"compareBarContainer\">\n                        <div id='compareBarBoxContainer'>\n                            {this.props.compare[0]? (\n                                <button className='compareBarBox compareBarBoxResult' value='0' onClick={this.clearFirstCompare} >\n                                    <p className='compareBarWord'>{this.props.compare[0].school_name}</p>\n                                    <FontAwesomeIcon className=\"compareBarDeleteButton\" size=\"md\" icon={faTimes} />\n                                </button>\n                                ) : (\"Error\")\n                            }\n                            {this.props.compare[1]? (\n                                <button className='compareBarBox compareBarBoxResult'  onClick={this.clearSecondCompare} >\n\n                                    <p className='compareBarWord'>{this.props.compare[1].school_name}</p>\n                                    <FontAwesomeIcon  className=\"compareBarDeleteButton\" size=\"md\" icon={faTimes} />\n\n                                </button>\n                                ) : (\n                                <div className='compareBarBox'>\n                                    <p className='compareBarWordEmpty'>Add School To Compare</p>\n                                </div>\n                                )\n                            }\n                        </div>\n                        <div id='compareBarButtonBox'>\n                            <button className='compareBarButtonBoxButton' onClick={this.props.clearCompare}>Clear All</button>\n                            {this.props.compare.length === 1? (\n                                <p>Compare</p>\n                            ) : (\n                                <NavLink className='compareBarButtonBoxButton' to=\"/compare\">Compare</NavLink>                                    \n                            )}\n                        </div>\n                    </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        compare: state.search.compare,\n        compareButtonStatus: state.search.compareButtonStatus\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        clearCompare: () => {\n            dispatch(clearCompare());\n        },\n        clearOneCompare: (newCompare) => {\n            dispatch(clearOneCompare(newCompare));\n        },\n    }\n};\n\nexport const CompareBar = withRouter(connect(mapStateToProps, mapDispatchToProps)(PureCompareBar))"]},"metadata":{},"sourceType":"module"}