{"ast":null,"code":"import axios from 'axios';\nexport const CMS_CHECK_LOGIN = 'CMS_CHECK_LOGIN';\nexport const CMS_LOGIN_SUCCESS = 'CMS_LOGIN_SUCCESS';\nexport const CMS_LOGIN_FAILURE = 'CMS_LOGIN_FAILURE';\nexport const CMS_LOGOUT = 'CMS_LOGOUT';\nexport const CMS_SIGNUP_FAILURE = 'CMS_SIGNUP_FAILURE';\nexport function checkCmsLogin() {\n  if (localStorage.getItem('cmsToken')) {\n    return {\n      type: CMS_CHECK_LOGIN\n    };\n  } else {\n    return {\n      type: CMS_LOGIN_FAILURE\n    };\n  }\n}\n\nfunction loginCmsSuccess() {\n  return {\n    type: CMS_LOGIN_SUCCESS\n  };\n}\n\nfunction loginCmsFailure() {\n  return {\n    type: CMS_LOGIN_FAILURE\n  };\n}\n\nfunction logOutActionCms() {\n  return {\n    type: CMS_LOGOUT\n  };\n}\n\nexport function loginCmsUser(email, password) {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_SERVER}/api/cms/login/`, {\n      email: email,\n      password: password\n    }).then(response => {\n      console.log(response);\n\n      if (response.data == null) {\n        dispatch(loginCmsFailure());\n      } else if (!response.data.token) {\n        dispatch(loginCmsFailure());\n      } else {\n        localStorage.setItem('cmsToken', response.data.token);\n        dispatch(loginCmsSuccess());\n      }\n    });\n  };\n}\nexport function logOutCms() {\n  return dispatch => {\n    localStorage.removeItem('cmsToken');\n    dispatch(logOutActionCms());\n  };\n}\n\nfunction signUpCmsFailure() {\n  return {\n    type: CMS_SIGNUP_FAILURE\n  };\n}\n\nexport function signUpCmsUser(email, password) {\n  return dispatch => {\n    return axios.post(`http://localhost:8080/api/cms/signup`, {\n      email: email,\n      password: password\n    }).then(response => {\n      console.log('signup' + response);\n\n      if (!response.data) {\n        dispatch(signUpCmsFailure());\n      } else {\n        localStorage.setItem('cmsToken', response.data.token);\n        dispatch(loginCmsSuccess());\n      }\n    }).catch(err => {\n      dispatch(signUpCmsFailure());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/leesebastian/Desktop/whitetails/Farnhok/skoolsCapstone/frontend/skools/src/redux/cmsAuth/actions.js"],"names":["axios","CMS_CHECK_LOGIN","CMS_LOGIN_SUCCESS","CMS_LOGIN_FAILURE","CMS_LOGOUT","CMS_SIGNUP_FAILURE","checkCmsLogin","localStorage","getItem","type","loginCmsSuccess","loginCmsFailure","logOutActionCms","loginCmsUser","email","password","dispatch","post","process","env","REACT_APP_API_SERVER","then","response","console","log","data","token","setItem","logOutCms","removeItem","signUpCmsFailure","signUpCmsUser","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nexport const CMS_CHECK_LOGIN = 'CMS_CHECK_LOGIN';\r\nexport const CMS_LOGIN_SUCCESS = 'CMS_LOGIN_SUCCESS';\r\nexport const CMS_LOGIN_FAILURE = 'CMS_LOGIN_FAILURE';\r\nexport const CMS_LOGOUT = 'CMS_LOGOUT';\r\nexport const CMS_SIGNUP_FAILURE = 'CMS_SIGNUP_FAILURE';\r\n\r\nexport function checkCmsLogin() {\r\n    if (localStorage.getItem('cmsToken')) {\r\n        return {\r\n            type: CMS_CHECK_LOGIN\r\n        };\r\n    } else {\r\n       return {\r\n           type: CMS_LOGIN_FAILURE\r\n        }\r\n    }\r\n}\r\n\r\nfunction loginCmsSuccess() {\r\n    return {\r\n        type: CMS_LOGIN_SUCCESS\r\n    };\r\n}\r\n\r\nfunction loginCmsFailure() {\r\n    return {\r\n        type: CMS_LOGIN_FAILURE,\r\n    }\r\n}\r\n\r\n function logOutActionCms() {\r\n    return {\r\n        type: CMS_LOGOUT\r\n    }\r\n}\r\n\r\nexport function loginCmsUser(email, password) {\r\n    return (dispatch) => {\r\n        return axios.post(`${process.env.REACT_APP_API_SERVER}/api/cms/login/`,\r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        )\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.data == null){\r\n                dispatch(loginCmsFailure());\r\n            } else if (!response.data.token){\r\n                dispatch(loginCmsFailure());\r\n            } else {\r\n                localStorage.setItem('cmsToken', response.data.token);\r\n                dispatch(loginCmsSuccess());\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function logOutCms(){\r\n    return (dispatch)=> {\r\n        localStorage.removeItem('cmsToken');\r\n        dispatch(logOutActionCms());\r\n    };\r\n}\r\n\r\n\r\nfunction signUpCmsFailure() {\r\n    return {\r\n        type: CMS_SIGNUP_FAILURE,\r\n    }\r\n}\r\n\r\nexport function signUpCmsUser(email, password) {\r\n    return (dispatch) => {\r\n        return axios.post(`http://localhost:8080/api/cms/signup`,\r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        )\r\n        .then(response => {\r\n            console.log('signup' + response);\r\n            if(!response.data){\r\n                dispatch(signUpCmsFailure());\r\n            } else {\r\n                localStorage.setItem('cmsToken', response.data.token);\r\n                dispatch(loginCmsSuccess());\r\n            }\r\n        })\r\n        .catch(err => {\r\n            dispatch(signUpCmsFailure());\r\n        })\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}